use std::str::FromStr;
use crate::ast::{Expr, OpCode};

grammar;

// Use a macro for Expr and Factor.
Tier<Op, NextTier>: Box<Expr> = {
  Tier<Op, NextTier> Op NextTier => Box::new(Expr::Op(<>)),
  NextTier
}

pub Expr = Tier<ExprOp, Factor>;
Factor = Tier<FactorOp, Term>;

ExprOp: OpCode = {
  "+" => OpCode::Add,
  "-" => OpCode::Sub,
}

FactorOp: OpCode = {
  "*" => OpCode::Mul,
  "/" => OpCode::Div,
}

Term: Box<Expr> = {
  Num => Box::new(Expr::Number(<>)),
  "(" <Expr> ")",
};

Num: i32 = {
  r"[0-9]+" => i32::from_str(<>).unwrap(),
};